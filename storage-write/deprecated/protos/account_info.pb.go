// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.23.4
// source: account_info.proto

package main

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TableContext tableContext = 1;
	// AccountsWithContext accountsWithContext = 2;
	TxSignature *string    `protobuf:"bytes,1,opt,name=tx_signature,json=txSignature,proto3,oneof" json:"tx_signature,omitempty"`
	Accounts    []*Account `protobuf:"bytes,2,rep,name=accounts,proto3" json:"accounts,omitempty"`
	Tokens      []*Token   `protobuf:"bytes,3,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *AccountInfo) Reset() {
	*x = AccountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountInfo) ProtoMessage() {}

func (x *AccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_account_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountInfo.ProtoReflect.Descriptor instead.
func (*AccountInfo) Descriptor() ([]byte, []int) {
	return file_account_info_proto_rawDescGZIP(), []int{0}
}

func (x *AccountInfo) GetTxSignature() string {
	if x != nil && x.TxSignature != nil {
		return *x.TxSignature
	}
	return ""
}

func (x *AccountInfo) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *AccountInfo) GetTokens() []*Token {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type AccountContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot int32 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *AccountContext) Reset() {
	*x = AccountContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_info_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountContext) ProtoMessage() {}

func (x *AccountContext) ProtoReflect() protoreflect.Message {
	mi := &file_account_info_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountContext.ProtoReflect.Descriptor instead.
func (*AccountContext) Descriptor() ([]byte, []int) {
	return file_account_info_proto_rawDescGZIP(), []int{1}
}

func (x *AccountContext) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pubkey               string             `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Executable           bool               `protobuf:"varint,2,opt,name=executable,proto3" json:"executable,omitempty"`
	Lamports             uint64             `protobuf:"varint,3,opt,name=lamports,proto3" json:"lamports,omitempty"`
	Owner                *string            `protobuf:"bytes,4,opt,name=owner,proto3,oneof" json:"owner,omitempty"`
	RentEpoch            uint64             `protobuf:"varint,5,opt,name=rentEpoch,proto3" json:"rentEpoch,omitempty"`
	Space                *int64             `protobuf:"varint,6,opt,name=space,proto3,oneof" json:"space,omitempty"`
	Program              *string            `protobuf:"bytes,7,opt,name=program,proto3,oneof" json:"program,omitempty"`
	ProgramData          *string            `protobuf:"bytes,8,opt,name=program_data,json=programData,proto3,oneof" json:"program_data,omitempty"`
	AccountType          *string            `protobuf:"bytes,9,opt,name=account_type,json=accountType,proto3,oneof" json:"account_type,omitempty"`
	IsNative             *bool              `protobuf:"varint,10,opt,name=is_native,json=isNative,proto3,oneof" json:"is_native,omitempty"`
	Mint                 *string            `protobuf:"bytes,11,opt,name=mint,proto3,oneof" json:"mint,omitempty"`
	State                *string            `protobuf:"bytes,12,opt,name=state,proto3,oneof" json:"state,omitempty"`
	TokenAmount          *string            `protobuf:"bytes,13,opt,name=token_amount,json=tokenAmount,proto3,oneof" json:"token_amount,omitempty"`
	TokenAmountDecimals  *int64             `protobuf:"varint,14,opt,name=token_amount_decimals,json=tokenAmountDecimals,proto3,oneof" json:"token_amount_decimals,omitempty"`
	AuthorizedVoters     []*AuthorizedVoter `protobuf:"bytes,15,rep,name=authorized_voters,json=authorizedVoters,proto3" json:"authorized_voters,omitempty"`
	AuthorizedWithdrawer *string            `protobuf:"bytes,16,opt,name=authorized_withdrawer,json=authorizedWithdrawer,proto3,oneof" json:"authorized_withdrawer,omitempty"`
	PriorVoters          []*PriorVoters     `protobuf:"bytes,17,rep,name=prior_voters,json=priorVoters,proto3" json:"prior_voters,omitempty"`
	NodePubkey           *string            `protobuf:"bytes,18,opt,name=node_pubkey,json=nodePubkey,proto3,oneof" json:"node_pubkey,omitempty"`
	Commission           *int64             `protobuf:"varint,19,opt,name=commission,proto3,oneof" json:"commission,omitempty"`
	EpochCredits         []*EpochCredit     `protobuf:"bytes,20,rep,name=epoch_credits,json=epochCredits,proto3" json:"epoch_credits,omitempty"`
	Votes                []*Votes           `protobuf:"bytes,21,rep,name=votes,proto3" json:"votes,omitempty"`
	RootSlot             *int64             `protobuf:"varint,22,opt,name=root_slot,json=rootSlot,proto3,oneof" json:"root_slot,omitempty"`
	LastTimestamp        *LastTimestamp     `protobuf:"bytes,23,opt,name=last_timestamp,json=lastTimestamp,proto3,oneof" json:"last_timestamp,omitempty"`
	MintAuthority        *string            `protobuf:"bytes,24,opt,name=mint_authority,json=mintAuthority,proto3,oneof" json:"mint_authority,omitempty"`
	Supply               *string            `protobuf:"bytes,25,opt,name=supply,proto3,oneof" json:"supply,omitempty"`
	Data                 *EncodedData       `protobuf:"bytes,26,opt,name=data,proto3,oneof" json:"data,omitempty"`
	RetrievalTimestamp   *UnixTimestamp     `protobuf:"bytes,27,opt,name=retrieval_timestamp,json=retrievalTimestamp,proto3,oneof" json:"retrieval_timestamp,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_info_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_account_info_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_account_info_proto_rawDescGZIP(), []int{2}
}

func (x *Account) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

func (x *Account) GetExecutable() bool {
	if x != nil {
		return x.Executable
	}
	return false
}

func (x *Account) GetLamports() uint64 {
	if x != nil {
		return x.Lamports
	}
	return 0
}

func (x *Account) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *Account) GetRentEpoch() uint64 {
	if x != nil {
		return x.RentEpoch
	}
	return 0
}

func (x *Account) GetSpace() int64 {
	if x != nil && x.Space != nil {
		return *x.Space
	}
	return 0
}

func (x *Account) GetProgram() string {
	if x != nil && x.Program != nil {
		return *x.Program
	}
	return ""
}

func (x *Account) GetProgramData() string {
	if x != nil && x.ProgramData != nil {
		return *x.ProgramData
	}
	return ""
}

func (x *Account) GetAccountType() string {
	if x != nil && x.AccountType != nil {
		return *x.AccountType
	}
	return ""
}

func (x *Account) GetIsNative() bool {
	if x != nil && x.IsNative != nil {
		return *x.IsNative
	}
	return false
}

func (x *Account) GetMint() string {
	if x != nil && x.Mint != nil {
		return *x.Mint
	}
	return ""
}

func (x *Account) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *Account) GetTokenAmount() string {
	if x != nil && x.TokenAmount != nil {
		return *x.TokenAmount
	}
	return ""
}

func (x *Account) GetTokenAmountDecimals() int64 {
	if x != nil && x.TokenAmountDecimals != nil {
		return *x.TokenAmountDecimals
	}
	return 0
}

func (x *Account) GetAuthorizedVoters() []*AuthorizedVoter {
	if x != nil {
		return x.AuthorizedVoters
	}
	return nil
}

func (x *Account) GetAuthorizedWithdrawer() string {
	if x != nil && x.AuthorizedWithdrawer != nil {
		return *x.AuthorizedWithdrawer
	}
	return ""
}

func (x *Account) GetPriorVoters() []*PriorVoters {
	if x != nil {
		return x.PriorVoters
	}
	return nil
}

func (x *Account) GetNodePubkey() string {
	if x != nil && x.NodePubkey != nil {
		return *x.NodePubkey
	}
	return ""
}

func (x *Account) GetCommission() int64 {
	if x != nil && x.Commission != nil {
		return *x.Commission
	}
	return 0
}

func (x *Account) GetEpochCredits() []*EpochCredit {
	if x != nil {
		return x.EpochCredits
	}
	return nil
}

func (x *Account) GetVotes() []*Votes {
	if x != nil {
		return x.Votes
	}
	return nil
}

func (x *Account) GetRootSlot() int64 {
	if x != nil && x.RootSlot != nil {
		return *x.RootSlot
	}
	return 0
}

func (x *Account) GetLastTimestamp() *LastTimestamp {
	if x != nil {
		return x.LastTimestamp
	}
	return nil
}

func (x *Account) GetMintAuthority() string {
	if x != nil && x.MintAuthority != nil {
		return *x.MintAuthority
	}
	return ""
}

func (x *Account) GetSupply() string {
	if x != nil && x.Supply != nil {
		return *x.Supply
	}
	return ""
}

func (x *Account) GetData() *EncodedData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Account) GetRetrievalTimestamp() *UnixTimestamp {
	if x != nil {
		return x.RetrievalTimestamp
	}
	return nil
}

type EncodedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Raw      string `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
	Encoding string `protobuf:"bytes,2,opt,name=encoding,proto3" json:"encoding,omitempty"`
}

func (x *EncodedData) Reset() {
	*x = EncodedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_info_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncodedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodedData) ProtoMessage() {}

func (x *EncodedData) ProtoReflect() protoreflect.Message {
	mi := &file_account_info_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodedData.ProtoReflect.Descriptor instead.
func (*EncodedData) Descriptor() ([]byte, []int) {
	return file_account_info_proto_rawDescGZIP(), []int{3}
}

func (x *EncodedData) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

func (x *EncodedData) GetEncoding() string {
	if x != nil {
		return x.Encoding
	}
	return ""
}

type AuthorizedVoter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorizedVoter string `protobuf:"bytes,1,opt,name=authorizedVoter,proto3" json:"authorizedVoter,omitempty"`
	Epoch           int64  `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
}

func (x *AuthorizedVoter) Reset() {
	*x = AuthorizedVoter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_info_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizedVoter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizedVoter) ProtoMessage() {}

func (x *AuthorizedVoter) ProtoReflect() protoreflect.Message {
	mi := &file_account_info_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizedVoter.ProtoReflect.Descriptor instead.
func (*AuthorizedVoter) Descriptor() ([]byte, []int) {
	return file_account_info_proto_rawDescGZIP(), []int{4}
}

func (x *AuthorizedVoter) GetAuthorizedVoter() string {
	if x != nil {
		return x.AuthorizedVoter
	}
	return ""
}

func (x *AuthorizedVoter) GetEpoch() int64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

type EpochCredit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credits         string `protobuf:"bytes,1,opt,name=credits,proto3" json:"credits,omitempty"`
	Epoch           int64  `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	PreviousCredits string `protobuf:"bytes,3,opt,name=previous_credits,json=previousCredits,proto3" json:"previous_credits,omitempty"`
}

func (x *EpochCredit) Reset() {
	*x = EpochCredit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_info_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpochCredit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpochCredit) ProtoMessage() {}

func (x *EpochCredit) ProtoReflect() protoreflect.Message {
	mi := &file_account_info_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpochCredit.ProtoReflect.Descriptor instead.
func (*EpochCredit) Descriptor() ([]byte, []int) {
	return file_account_info_proto_rawDescGZIP(), []int{5}
}

func (x *EpochCredit) GetCredits() string {
	if x != nil {
		return x.Credits
	}
	return ""
}

func (x *EpochCredit) GetEpoch() int64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *EpochCredit) GetPreviousCredits() string {
	if x != nil {
		return x.PreviousCredits
	}
	return ""
}

type PriorVoters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorizedPubkey            string `protobuf:"bytes,1,opt,name=authorized_pubkey,json=authorizedPubkey,proto3" json:"authorized_pubkey,omitempty"`
	EpochOfLastAuthorizedSwitch int64  `protobuf:"varint,2,opt,name=epoch_of_last_authorized_switch,json=epochOfLastAuthorizedSwitch,proto3" json:"epoch_of_last_authorized_switch,omitempty"`
	TargetEpoch                 int64  `protobuf:"varint,3,opt,name=target_epoch,json=targetEpoch,proto3" json:"target_epoch,omitempty"`
}

func (x *PriorVoters) Reset() {
	*x = PriorVoters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_info_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriorVoters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriorVoters) ProtoMessage() {}

func (x *PriorVoters) ProtoReflect() protoreflect.Message {
	mi := &file_account_info_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriorVoters.ProtoReflect.Descriptor instead.
func (*PriorVoters) Descriptor() ([]byte, []int) {
	return file_account_info_proto_rawDescGZIP(), []int{6}
}

func (x *PriorVoters) GetAuthorizedPubkey() string {
	if x != nil {
		return x.AuthorizedPubkey
	}
	return ""
}

func (x *PriorVoters) GetEpochOfLastAuthorizedSwitch() int64 {
	if x != nil {
		return x.EpochOfLastAuthorizedSwitch
	}
	return 0
}

func (x *PriorVoters) GetTargetEpoch() int64 {
	if x != nil {
		return x.TargetEpoch
	}
	return 0
}

type LastTimestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot      int64 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Timestamp int64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *LastTimestamp) Reset() {
	*x = LastTimestamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_info_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LastTimestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LastTimestamp) ProtoMessage() {}

func (x *LastTimestamp) ProtoReflect() protoreflect.Message {
	mi := &file_account_info_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LastTimestamp.ProtoReflect.Descriptor instead.
func (*LastTimestamp) Descriptor() ([]byte, []int) {
	return file_account_info_proto_rawDescGZIP(), []int{7}
}

func (x *LastTimestamp) GetSlot() int64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *LastTimestamp) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type Votes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot              int64 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	ConfirmationCount int64 `protobuf:"varint,2,opt,name=confirmation_count,json=confirmationCount,proto3" json:"confirmation_count,omitempty"`
}

func (x *Votes) Reset() {
	*x = Votes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_info_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Votes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Votes) ProtoMessage() {}

func (x *Votes) ProtoReflect() protoreflect.Message {
	mi := &file_account_info_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Votes.ProtoReflect.Descriptor instead.
func (*Votes) Descriptor() ([]byte, []int) {
	return file_account_info_proto_rawDescGZIP(), []int{8}
}

func (x *Votes) GetSlot() int64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *Votes) GetConfirmationCount() int64 {
	if x != nil {
		return x.ConfirmationCount
	}
	return 0
}

type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsNft                bool           `protobuf:"varint,1,opt,name=is_nft,json=isNft,proto3" json:"is_nft,omitempty"`
	Mint                 string         `protobuf:"bytes,2,opt,name=mint,proto3" json:"mint,omitempty"`
	UpdateAuthority      string         `protobuf:"bytes,3,opt,name=update_authority,json=updateAuthority,proto3" json:"update_authority,omitempty"`
	Name                 string         `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Symbol               string         `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Uri                  string         `protobuf:"bytes,6,opt,name=uri,proto3" json:"uri,omitempty"`
	SellerFeeBasisPoints uint32         `protobuf:"varint,7,opt,name=seller_fee_basis_points,json=sellerFeeBasisPoints,proto3" json:"seller_fee_basis_points,omitempty"`
	Creators             []*Creator     `protobuf:"bytes,8,rep,name=creators,proto3" json:"creators,omitempty"`
	PrimarySaleHappened  bool           `protobuf:"varint,9,opt,name=primary_sale_happened,json=primarySaleHappened,proto3" json:"primary_sale_happened,omitempty"`
	IsMutable            bool           `protobuf:"varint,10,opt,name=is_mutable,json=isMutable,proto3" json:"is_mutable,omitempty"`
	RetrievalTimestamp   *UnixTimestamp `protobuf:"bytes,11,opt,name=retrieval_timestamp,json=retrievalTimestamp,proto3,oneof" json:"retrieval_timestamp,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_info_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_account_info_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_account_info_proto_rawDescGZIP(), []int{9}
}

func (x *Token) GetIsNft() bool {
	if x != nil {
		return x.IsNft
	}
	return false
}

func (x *Token) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

func (x *Token) GetUpdateAuthority() string {
	if x != nil {
		return x.UpdateAuthority
	}
	return ""
}

func (x *Token) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Token) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Token) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Token) GetSellerFeeBasisPoints() uint32 {
	if x != nil {
		return x.SellerFeeBasisPoints
	}
	return 0
}

func (x *Token) GetCreators() []*Creator {
	if x != nil {
		return x.Creators
	}
	return nil
}

func (x *Token) GetPrimarySaleHappened() bool {
	if x != nil {
		return x.PrimarySaleHappened
	}
	return false
}

func (x *Token) GetIsMutable() bool {
	if x != nil {
		return x.IsMutable
	}
	return false
}

func (x *Token) GetRetrievalTimestamp() *UnixTimestamp {
	if x != nil {
		return x.RetrievalTimestamp
	}
	return nil
}

type Creator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address  string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Verified bool   `protobuf:"varint,2,opt,name=verified,proto3" json:"verified,omitempty"`
	Share    uint32 `protobuf:"varint,3,opt,name=share,proto3" json:"share,omitempty"`
}

func (x *Creator) Reset() {
	*x = Creator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_info_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Creator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Creator) ProtoMessage() {}

func (x *Creator) ProtoReflect() protoreflect.Message {
	mi := &file_account_info_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Creator.ProtoReflect.Descriptor instead.
func (*Creator) Descriptor() ([]byte, []int) {
	return file_account_info_proto_rawDescGZIP(), []int{10}
}

func (x *Creator) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Creator) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *Creator) GetShare() uint32 {
	if x != nil {
		return x.Share
	}
	return 0
}

var File_account_info_proto protoreflect.FileDescriptor

var file_account_info_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xb2, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x26, 0x0a, 0x0c, 0x74, 0x78, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x78, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x6f, 0x6c, 0x61,
	0x6e, 0x61, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x12, 0x31, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x74, 0x78, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x22, 0x24, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x22, 0xe0, 0x0b, 0x0a, 0x07, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x6c, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x70, 0x6f,
	0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x70,
	0x6f, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x01, 0x52, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x05, 0x52, 0x08, 0x69, 0x73, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x17, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x04, 0x6d, 0x69, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0b, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x15, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x48, 0x09, 0x52, 0x13, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x50, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x64, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x56,
	0x6f, 0x74, 0x65, 0x72, 0x52, 0x10, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64,
	0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x65, 0x72, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x14, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x42, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x72, 0x69, 0x6f,
	0x72, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x56, 0x6f,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x75, 0x62,
	0x6b, 0x65, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x0a, 0x6e, 0x6f, 0x64,
	0x65, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0c,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x44, 0x0a, 0x0d, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73,
	0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x70, 0x6f, 0x63,
	0x68, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x52, 0x0c, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x43, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x15,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x52,
	0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x73,
	0x6c, 0x6f, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0d, 0x52, 0x08, 0x72, 0x6f, 0x6f,
	0x74, 0x53, 0x6c, 0x6f, 0x74, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x48, 0x0e, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x74, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0f, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x06, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x48,
	0x11, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x5a, 0x0a, 0x13, 0x72, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x55, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x12, 0x52,
	0x12, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x73, 0x5f,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6d, 0x69, 0x6e, 0x74, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x73, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x64, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x65, 0x72, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x3b, 0x0a,
	0x0b, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x51, 0x0a, 0x0f, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a,
	0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x22, 0x68, 0x0a,
	0x0b, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x29, 0x0a, 0x10,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x0b, 0x50, 0x72, 0x69, 0x6f,
	0x72, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x50, 0x75,
	0x62, 0x6b, 0x65, 0x79, 0x12, 0x44, 0x0a, 0x1f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x6f, 0x66,
	0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64,
	0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1b, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x4f, 0x66, 0x4c, 0x61, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x22, 0x41, 0x0a,
	0x0d, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6c,
	0x6f, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x22, 0x4a, 0x0a, 0x05, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x2d, 0x0a,
	0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd2, 0x03, 0x0a,
	0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x6e, 0x66, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x66, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x69, 0x6e,
	0x74, 0x12, 0x29, 0x0a, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x35, 0x0a, 0x17, 0x73, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x73, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x73, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x46, 0x65, 0x65, 0x42, 0x61, 0x73, 0x69, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x12, 0x37, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x70, 0x70, 0x65,
	0x6e, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x53, 0x61, 0x6c, 0x65, 0x48, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x5a, 0x0a,
	0x13, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x6f, 0x6c,
	0x61, 0x6e, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x55, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x00, 0x52, 0x12, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x88, 0x01, 0x01, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x72, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x22, 0x55, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2e, 0x2f, 0x6d,
	0x61, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_account_info_proto_rawDescOnce sync.Once
	file_account_info_proto_rawDescData = file_account_info_proto_rawDesc
)

func file_account_info_proto_rawDescGZIP() []byte {
	file_account_info_proto_rawDescOnce.Do(func() {
		file_account_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_account_info_proto_rawDescData)
	})
	return file_account_info_proto_rawDescData
}

var file_account_info_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_account_info_proto_goTypes = []interface{}{
	(*AccountInfo)(nil),     // 0: solana.AccountInfo.AccountInfo
	(*AccountContext)(nil),  // 1: solana.AccountInfo.AccountContext
	(*Account)(nil),         // 2: solana.AccountInfo.Account
	(*EncodedData)(nil),     // 3: solana.AccountInfo.EncodedData
	(*AuthorizedVoter)(nil), // 4: solana.AccountInfo.AuthorizedVoter
	(*EpochCredit)(nil),     // 5: solana.AccountInfo.EpochCredit
	(*PriorVoters)(nil),     // 6: solana.AccountInfo.PriorVoters
	(*LastTimestamp)(nil),   // 7: solana.AccountInfo.LastTimestamp
	(*Votes)(nil),           // 8: solana.AccountInfo.Votes
	(*Token)(nil),           // 9: solana.AccountInfo.Token
	(*Creator)(nil),         // 10: solana.AccountInfo.Creator
	(*UnixTimestamp)(nil),   // 11: solana.ConfirmedBlock.UnixTimestamp
}
var file_account_info_proto_depIdxs = []int32{
	2,  // 0: solana.AccountInfo.AccountInfo.accounts:type_name -> solana.AccountInfo.Account
	9,  // 1: solana.AccountInfo.AccountInfo.tokens:type_name -> solana.AccountInfo.Token
	4,  // 2: solana.AccountInfo.Account.authorized_voters:type_name -> solana.AccountInfo.AuthorizedVoter
	6,  // 3: solana.AccountInfo.Account.prior_voters:type_name -> solana.AccountInfo.PriorVoters
	5,  // 4: solana.AccountInfo.Account.epoch_credits:type_name -> solana.AccountInfo.EpochCredit
	8,  // 5: solana.AccountInfo.Account.votes:type_name -> solana.AccountInfo.Votes
	7,  // 6: solana.AccountInfo.Account.last_timestamp:type_name -> solana.AccountInfo.LastTimestamp
	3,  // 7: solana.AccountInfo.Account.data:type_name -> solana.AccountInfo.EncodedData
	11, // 8: solana.AccountInfo.Account.retrieval_timestamp:type_name -> solana.ConfirmedBlock.UnixTimestamp
	10, // 9: solana.AccountInfo.Token.creators:type_name -> solana.AccountInfo.Creator
	11, // 10: solana.AccountInfo.Token.retrieval_timestamp:type_name -> solana.ConfirmedBlock.UnixTimestamp
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_account_info_proto_init() }
func file_account_info_proto_init() {
	if File_account_info_proto != nil {
		return
	}
	file_confirmed_block_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_account_info_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_info_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_info_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_info_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncodedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_info_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizedVoter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_info_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpochCredit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_info_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriorVoters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_info_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LastTimestamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_info_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Votes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_info_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_info_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Creator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_account_info_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_account_info_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_account_info_proto_msgTypes[9].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_account_info_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_account_info_proto_goTypes,
		DependencyIndexes: file_account_info_proto_depIdxs,
		MessageInfos:      file_account_info_proto_msgTypes,
	}.Build()
	File_account_info_proto = out.File
	file_account_info_proto_rawDesc = nil
	file_account_info_proto_goTypes = nil
	file_account_info_proto_depIdxs = nil
}
